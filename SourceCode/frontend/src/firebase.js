import { initializeApp } from "firebase/app";
import { getFirestore, collection, getDocs, writeBatch, doc } from "firebase/firestore";

const config= {
    apiKey: "AIzaSyC7nygfHugm6ynTHRcNM3XSxmtXy85wrg0",
    authDomain: "pine-care-derby.firebaseapp.com",
    projectId: "pine-care-derby",
    storageBucket: "pine-care-derby.appspot.com",
    messagingSenderId: "55090232340",
    appId: "1:55090232340:web:1f1a866e83463647a0bb01",
    measurementId: "G-BB7TBNHDCJ"
  };

const firebaseApp = initializeApp(config);
const db = getFirestore(firebaseApp)

// CRUD Functions


/* ---RACER--- */
// Create 
export async function updateAllRacers(newList, removedRacers){
    // create batch to update racer if already in collection
    // also add racer if not already in db
    const batch = writeBatch(db);
    console.log(newList);
    for(let i = 0; i < newList.length; i++){
        if(newList[i].dbId === undefined){
            // gets autogenerated ref
            let myNewRef = doc(collection(db, "Racer"));
            batch.set(myNewRef, { name: newList[i].name, id: newList[i].id, score: newList[i].score });
        }
        else{
            const myRef = doc(db, "Racer", newList[i].dbId);
            batch.update(myRef, { name: newList[i].name, id: newList[i].id, score: newList[i].score });
        }
    }
    for(let i = 0; i < removedRacers.length; i++){
        if(removedRacers[i].dbId === undefined) continue;


        let myRemRef = doc(db, "Racer", removedRacers[i].dbId);
        batch.delete(myRemRef);
    }
    
    await batch.commit();
}

export async function getAllRacers(){
    const query = await getDocs(collection(db, "Racer"));
    let allRacers = [];
    query.forEach((doc) => {
        let racer = doc.data();
        racer.dbId = doc.id;
        // doc.data() is never undefined for query doc snapshots
        allRacers.push(racer)
      });
      console.log(allRacers);
      return allRacers
}